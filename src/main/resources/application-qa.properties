# =============================================================================
# AUTH MICROSERVICE - QA/STAGING CONFIGURATION
# =============================================================================
# This file contains QA/staging-specific configuration overrides

# =============================================================================
# APPLICATION CONFIGURATION
# =============================================================================
app.env=qa
server.port=8080

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================
db.host=qa-postgres.internal
db.port=5432
db.name=auth_microservice_qa
db.username=auth_user_qa
db.password=qa_secure_password_123

# Database Pool Configuration (moderate for QA)
db.pool.maxSize=30
db.pool.maxWaitQueueSize=75
db.pool.connectionTimeout=30000
db.pool.idleTimeout=600000

# Health Check Configuration
db.healthCheck.interval=30000

# =============================================================================
# REDIS CONFIGURATION
# =============================================================================
redis.host=qa-redis.internal
redis.port=6379
redis.password=qa_redis_password_123
redis.database=0

# =============================================================================
# JWT CONFIGURATION
# =============================================================================
jwt.secret=qa-jwt-secret-key-for-testing-environment-should-be-secure-but-not-production
jwt.issuer=auth-microservice-qa
jwt.accessTokenExpiry=1800
jwt.refreshTokenExpiry=86400

# =============================================================================
# SECURITY CONFIGURATION
# =============================================================================
# Password hashing (moderate rounds for QA)
security.bcrypt.rounds=10

# Rate Limiting (moderate for QA testing)
security.rateLimit.login.attempts=8
security.rateLimit.login.blockMinutes=45
security.rateLimit.api.requestsPerMinute=120

# CORS Configuration (moderate for QA)
security.cors.allowedOrigins=https://qa.yourdomain.com,https://qa-app.yourdomain.com,http://localhost:3000
security.cors.allowedMethods=GET,POST,PUT,DELETE,OPTIONS
security.cors.allowedHeaders=Content-Type,Authorization,X-Requested-With,X-Test-Header

# =============================================================================
# MONITORING & OBSERVABILITY
# =============================================================================
# Logging (detailed for QA testing)
logging.level=INFO
logging.format=json
logging.file.enabled=true
logging.file.path=/var/log/auth-microservice/qa.log
logging.file.maxSize=20MB
logging.file.maxFiles=5

# =============================================================================
# EXTERNAL SERVICES
# =============================================================================
# Email Service (enabled but using test SMTP)
email.enabled=true
email.smtp.host=smtp.mailtrap.io
email.smtp.port=587
email.smtp.username=qa_email_username
email.smtp.password=qa_email_password
email.from.address=qa-noreply@yourdomain.com
email.from.name=Auth Microservice QA

# GeoLocation Service (enabled for QA testing)
geolocation.enabled=true
geolocation.apiKey=qa_geolocation_api_key

# =============================================================================
# USERNAME GENERATION CONFIGURATION
# =============================================================================
# Username generation settings for QA/staging environment
# Balanced configuration for testing scenarios with moderate performance

# Username constraints (consistent with production)
username.generation.maxLength=64
username.generation.minLength=3

# Collision resolution (moderate attempts for QA testing)
username.generation.maxCollisionAttempts=75

# Additional reserved words for QA environment
# Includes QA-specific terms and common test usernames
username.generation.reservedWords=qa,staging,test,demo,testuser,qauser,demouser

# Username cache configuration (balanced for QA)
# Moderate expiration and cache size for testing scenarios
username.generation.cache.enabled=true
username.generation.cache.expirationMinutes=45
username.generation.cache.maxSize=7500
username.generation.cache.keyPrefix=qa:username:exists:

# Performance monitoring (balanced for QA testing)
# Standard threshold for performance validation in QA environment
username.generation.metrics.enabled=true
username.generation.metrics.slowOperationThreshold=75

# =============================================================================
# QA SPECIFIC CONFIGURATION
# =============================================================================
dev.mode=false
dev.autoReload=false
dev.mockExternalServices=false

# QA specific properties
qa.seedTestData=true
qa.resetDbOnStartup=false
qa.enableTestEndpoints=true
qa.enablePerformanceLogging=true
qa.slowQueryThreshold=1000
qa.enableSecurityHeaders=true
qa.enableAuditLogging=true